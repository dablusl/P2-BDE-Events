@{
    Layout = "~/Views/Shared/_LayoutPrestataire.cshtml";
}

@section Header {

}

@using P2_BDE_Events.Models.Evenement

@model P2_BDE_Events.ViewModels.AppelDoffreViewModel

<style>
    .scrollable-content {
        background-color: violet;
        width: 100%;
        padding: 30px;
        max-height: 80vh;
        overflow-y: auto;
        display: flex;
        flex-wrap: wrap;
        justify-content: space-between;
    }

    .card-evenement-appeloffre {
        background-color: white;
        border-radius: 40px 40px 20px 20px;
        padding: 10px;
        width: 50%;
    }

    .card-image-appel {
        width: 100%;
        border-radius: 30px;
    }

    .gradient-container {
        position: relative;
        display: inline-block;
    }

        .gradient-container img {
            display: block;
        }

    .gradient-overlay {
        position: absolute;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background: linear-gradient(to bottom, rgba(0, 0, 0, 0), rgba(255, 255, 255, 1));
        pointer-events: none;
    }

    .titre-appel {
        position: absolute;
        top: 50%; 
        left: 50%;
        transform: translate(-50%, -50%);
        color: black; /* Adjust the color as needed */
        font-size: 40px; /* Adjust the font size as needed */
        z-index: 1; /* Place the text above the gradient overlay */
    }

</style>

<div class="scrollable-content">
    @using (Html.BeginForm("ProposerUnePrestation", "AppelsDoffre", FormMethod.Get, new { id = "proposalForm" }))
    {

        <input type="hidden" id="idEvenement" name="idEvenement" />
        <input type="hidden" id="type" name="type" />
        <input type="hidden" id="idLigne" name="idLigne" />


        foreach (Evenement evenement in Model.EvenementsEnAppelDoffre)
        {
            //if (evenement.Lignes.Count != Model.Propositions.Count)
            if (evenement.Lignes.Count(ligne => ligne.Prestation == null &&
            Model.Types.Contains(ligne.Type) &&
            !Model.Propositions.Select(p => p.LigneEvenementId).Contains(ligne.Id)) > 0)
            {
                <div class="card-evenement-appeloffre">
                    <div class="gradient-container">
                        <img class="card-image-appel" src="@evenement.CoverPhotoPath">
                        <div class="gradient-overlay"></div>
                        <h1 class="titre-appel">@evenement.Titre</h1>
                    </div>                    
                    <h2>@evenement.DateEvenement</h2>
                    <p class="appel-d-offre description">@evenement.Description</p>

                    <p>Services en appel</p>
                    <div class="list-services-en-attente">
                        @foreach (var ligne in evenement.Lignes)
                        {
                            if (ligne.Prestation == null &&
                            Model.Types.Contains(ligne.Type) &&
                            !Model.Propositions.Select(p => p.LigneEvenementId).Contains(ligne.Id))
                            {
                                <span>@ligne.Type</span>
                                <button class="creer-proposition" onclick="submitForm(@evenement.Id, '@ligne.Id')">+</button>
                            }
                        }
                    </div>
                </div>
            }
        }
    }
</div>

<script>
    function submitForm(idEvenement, idLigne) {
        document.getElementById("idEvenement").value = idEvenement;
        document.getElementById("idLigne").value = idLigne;
        document.getElementById("proposalForm").submit();
    }
</script>